apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image.tag }}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.image.port }}
        {{- with .Values.image.env}}
        env:
          {{- range $env := .}}
          - name: {{ $env.name }}
            value: {{ $env.value | quote }}
          {{- end }}
        {{- end }}
        {{- if .Values.disk }}
        volumeMounts:
          - name: {{ .Release.Name }}-data
            mountPath: {{ .Values.disk.mountPath }}
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.image.port }}
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.image.port }}
          initialDelaySeconds: 15
          periodSeconds: 30
        startupProbe:
          httpGet:
            path: /
            port: {{ .Values.image.port }}
          # 30 minutes (30 checks * 60 seconds)
          failureThreshold: 30
          periodSeconds: 60
      volumes:
        - name: {{ .Release.Name }}-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-data
        {{- end }}
      imagePullSecrets:
      - name: {{ .Release.Name }}-image-pull-secret
